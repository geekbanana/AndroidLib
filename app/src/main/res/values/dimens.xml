<resources>
    <!-- Default screen margins, per the Android Design guidelines. -->
    <dimen name="activity_horizontal_margin">16dp</dimen>
    <dimen name="activity_vertical_margin">16dp</dimen>

    <!-- font sizes -->
    <dimen name="font_larger">22sp</dimen>
    <dimen name="font_large">18sp</dimen>
    <dimen name="font_normal">15sp</dimen>
    <dimen name="font_small">12sp</dimen>

    <!-- typical spacing between two views -->
    <dimen name="spacing_huge">32dp</dimen>
    <dimen name="spacing_large">16dp</dimen>
    <dimen name="spacing_normal">8dp</dimen>
    <dimen name="spacing_small">4dp</dimen>
    <dimen name="spacing_tiny">2dp</dimen>

    <!-- typical sizes of views -->
    <dimen name="button_height_tall">60dp</dimen>
    <dimen name="button_height_normal">40dp</dimen>
    <dimen name="button_height_short">32dp</dimen>


    <!--
        style命名规则:
            1.类型 - 2.文字应用类型 - 3.layout_width - 4.paddingLeft,Right/marginLeft,Right

            1. Text/Button
            2. comment(说明性文字)/content(正文)/title(标题)/big(大标题)  每一种文字应用类型对应一组 textSize和textColor
            3. Wrap/Match
            4. PSmall/PNormal/PLarge  MSmall/MNormal/MLarge  (P代表paddingLeft,Right; M代表marginLeft,Right)

        根据经验, Android中常用来显示字体的控件是: TextView和Button.
        通常,
        1. 高度 = wrap_content + paddingTop + paddingBottom
        2. 宽度 = wrap_content + paddingLeft + paddingRight
           或 宽度 = match_parent + marginLeft + marginRight

        可见宽度是比较多变的, 高度基本固定, 因此规则的后两项是针对宽度来命名的.

        例:
        ButtonNormal
    -->

    <!-- TextView -->
    <style name="TextNormal">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textSize">@dimen/font_normal</item>
        <item name="android:textColor">@color/black</item>
    </style>

    <!-- Button -->
    <style name="ButtonNormal" parent="TextNormal">
        <item name="android:padding">@dimen/spacing_normal</item>
    </style>


</resources>
